cmake_minimum_required(VERSION 2.8.8)
project(aikido)

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_LIST_DIR}/cmake/")

set(INCLUDE_INSTALL_DIR include)
set(LIBRARY_INSTALL_DIR lib)
set(CONFIG_INSTALL_DIR "${LIBRARY_INSTALL_DIR}/${PROJECT_NAME}/cmake")

find_package(Boost REQUIRED COMPONENTS filesystem)
find_package(DART REQUIRED COMPONENTS core)
find_package(OMPL REQUIRED)
find_package(TINYXML2 REQUIRED)

# Compilation setup
include_directories(
  include
  src
)
include_directories(SYSTEM
  ${Boost_INCLUDE_DIRS}
  ${DART_INCLUDE_DIRS}
  ${TINYXML2_INCLUDE_DIRS}
)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")

# Build
add_library(${PROJECT_NAME} SHARED
  src/ompl/plan.cpp
  src/ompl/DARTGeometricStateSpace.cpp
  src/ompl/DARTGeometricStateValidityChecker.cpp
  #src/path/HauserSmoother.cpp
  src/path/BlendTrajectory.cpp
  src/path/ShiftTrajectory.cpp
  src/path/CartesianTwistTrajectory.cpp
  src/tsr/TSR.cpp
  src/util/CatkinResourceRetriever.cpp
  src/external/hauser_parabolic_smoother/DynamicPath.cpp
  src/external/hauser_parabolic_smoother/Timer.cpp
  src/external/hauser_parabolic_smoother/ParabolicRamp.cpp
  src/perception/PerceptionModule.cpp
  src/perception/AprilTagsModule.cpp
)
target_link_libraries(${PROJECT_NAME}
  ${DART_LIBRARIES}
  ${OMPL_LIBRARIES}
  ${Boost_LIBRARIES}
  ${TINYXML2_LIBRARIES}
)

# Install targets, headers, and a package.xml file (to satisfy REP-136).
install(FILES package.xml
  DESTINATION "share/${PROJECT_NAME}"
)
install(DIRECTORY include/
  DESTINATION "${INCLUDE_INSTALL_DIR}"
)
install(TARGETS ${PROJECT_NAME}
  EXPORT "${PROJECT_NAME}Targets"
  LIBRARY DESTINATION "${LIBRARY_INSTALL_DIR}"
)

# Generate and install a Targets.cmake file that contains EXPORTED targets, to
# be included() in the Config.cmake file. The target set "r3Targets" is
# generated by the install(TARGETS) directive above.
install(EXPORT "${PROJECT_NAME}Targets"
  FILE "${PROJECT_NAME}Targets.cmake"
  DESTINATION "${CONFIG_INSTALL_DIR}"
)

# Generate and install a Config.cmake file.
# TODO: We should also generate a _VERSION file.
include(CMakePackageConfigHelpers)
configure_package_config_file("cmake/${PROJECT_NAME}Config.cmake.in"
  "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake"
  INSTALL_DESTINATION "${CONFIG_INSTALL_DIR}"
  PATH_VARS INCLUDE_INSTALL_DIR
)
install(FILES "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake"
  DESTINATION "${CONFIG_INSTALL_DIR}"
)

# Add unit tests using GTest.
enable_testing()
add_subdirectory(tests)
